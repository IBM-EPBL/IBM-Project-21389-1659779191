{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1-xxrkDAOejLMlOa_rnrrHpMwm9JIbOSM","timestamp":1668758063478}],"authorship_tag":"ABX9TyMaOQArY+JqSswaj0+7niGa"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"l4Azp-M2tJML","executionInfo":{"status":"ok","timestamp":1668757702078,"user_tz":-330,"elapsed":2876,"user":{"displayName":"Jaisri Subramanian","userId":"12804078571671544909"}},"outputId":"5ba0a9c0-4383-4eff-a7c0-2ae0959e818d"},"outputs":[{"output_type":"stream","name":"stdout","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"]}],"source":["from google.colab import drive\n","drive.mount('/content/drive')"]},{"cell_type":"code","source":["pip install pygobject"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"52-gKqOOuYLn","executionInfo":{"status":"ok","timestamp":1668757984552,"user_tz":-330,"elapsed":3287,"user":{"displayName":"Jaisri Subramanian","userId":"12804078571671544909"}},"outputId":"ac0ea9dc-089b-4e19-aa03-4f21a4bc0d89"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Requirement already satisfied: pygobject in /usr/lib/python3/dist-packages (3.26.1)\n"]}]},{"cell_type":"code","source":["import cv2 \n","import numpy as np\n","from google.colab.patches import cv2_imshow\n","from matplotlib import pyplot as plt\n","import librosa\n","from tensorflow.keras.preprocessing import image\n","from keras.models import load_model\n","# Create a VideoCapture object and read from input file\n","# If the input is the camera, pass 0 instead of the video file name\n","cap = cv2.VideoCapture('/content/drive/MyDrive/forest fire.mp4')\n"," \n","# Check if camera opened successfully\n","if (cap.isOpened()== False): \n","  print(\"Error opening video stream or file\")\n"," \n","# Read until video is completed\n","while(cap.isOpened()):\n","  # Capture frame-by-frame\n","  ret, frame = cap.read()\n","  if ret == True:\n","    x=image.img_to_array(frame)\n","    res=cv2.resize(x,dsize=(64,64),interpolation=cv2.INTER_CUBIC)\n","    #expand the image shape\n","    x=np.expand_dims(res,axis=0)\n","    model=load_model(\"/content/drive/MyDrive/forest.h5\")\n","    cv2_imshow(frame)\n","    pred=model.predict(x)\n","    pred = int(pred[0][0])\n","    pred\n","    int(pred)\n","    if pred==1:\n","      print('Forest fire')\n","      break\n","    else:\n","      print(\"no danger\")\n","      break\n"," \n","# When everything done, release the video capture object\n","cap.release()\n"," \n","# Closes all the frames\n","cv2.destroyAllWindows()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"KG6XKZD6tvY2","executionInfo":{"status":"ok","timestamp":1668757863990,"user_tz":-330,"elapsed":5894,"user":{"displayName":"Jaisri Subramanian","userId":"12804078571671544909"}},"outputId":"154cc948-06fa-4b77-f50f-8579ea65f4fd"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Error opening video stream or file\n"]}]},{"cell_type":"code","source":["pip install twilio"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"yL04ie9ZuCC7","executionInfo":{"status":"ok","timestamp":1668757926853,"user_tz":-330,"elapsed":3491,"user":{"displayName":"Jaisri Subramanian","userId":"12804078571671544909"}},"outputId":"e7cee5c1-e668-4a7f-e474-9ad05f01ad23"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Requirement already satisfied: twilio in /usr/local/lib/python3.7/dist-packages (7.15.3)\n","Requirement already satisfied: PyJWT<3.0.0,>=2.0.0 in /usr/local/lib/python3.7/dist-packages (from twilio) (2.6.0)\n","Requirement already satisfied: requests>=2.0.0 in /usr/local/lib/python3.7/dist-packages (from twilio) (2.23.0)\n","Requirement already satisfied: pytz in /usr/local/lib/python3.7/dist-packages (from twilio) (2022.6)\n","Requirement already satisfied: idna<3,>=2.5 in /usr/local/lib/python3.7/dist-packages (from requests>=2.0.0->twilio) (2.10)\n","Requirement already satisfied: urllib3!=1.25.0,!=1.25.1,<1.26,>=1.21.1 in /usr/local/lib/python3.7/dist-packages (from requests>=2.0.0->twilio) (1.24.3)\n","Requirement already satisfied: chardet<4,>=3.0.2 in /usr/local/lib/python3.7/dist-packages (from requests>=2.0.0->twilio) (3.0.4)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.7/dist-packages (from requests>=2.0.0->twilio) (2022.9.24)\n"]}]},{"cell_type":"code","source":["pip install playsound"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"szK7iVhguSMs","executionInfo":{"status":"ok","timestamp":1668757948260,"user_tz":-330,"elapsed":5557,"user":{"displayName":"Jaisri Subramanian","userId":"12804078571671544909"}},"outputId":"36e6341d-9a20-4b53-d35c-c99fc673ff24"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Collecting playsound\n","  Downloading playsound-1.3.0.tar.gz (7.7 kB)\n","Building wheels for collected packages: playsound\n","  Building wheel for playsound (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for playsound: filename=playsound-1.3.0-py3-none-any.whl size=7035 sha256=2b82261aa375b5310a00b52afc79e7ed909ce989ed3aa45dcfa4679467d7a75d\n","  Stored in directory: /root/.cache/pip/wheels/ba/f8/bb/ea57c0146b664dca3a0ada4199b0ecb5f9dfcb7b7e22b65ba2\n","Successfully built playsound\n","Installing collected packages: playsound\n","Successfully installed playsound-1.3.0\n"]}]}]}
